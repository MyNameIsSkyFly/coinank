import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

allprojects {
    repositories {
        google()
        mavenCentral()
        mavenCentral()//mmkv
        maven { url "https://jitpack.io" }
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }

        maven {
            url 'https://maven.aliyun.com/nexus/content/repositories/releases/'
        }
        maven { url 'https://developer.huawei.com/repo/'}
        flatDir {
            dirs 'libs'
        }

    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
    afterEvaluate {
        // check if android block is available

        if (it.hasProperty('android')) {

            if (it.android.namespace == null) {
                def manifest = new XmlSlurper().parse(file(it.android.sourceSets.main.manifest.srcFile))
                def packageName = manifest.@package.text()
                println("Setting ${packageName} as android namespace")
                android.namespace = packageName
            }
        }
        def javaVersion = JavaVersion.VERSION_17
        android {
            def androidApiVersion = 34
            compileSdkVersion androidApiVersion
            defaultConfig {
                targetSdkVersion androidApiVersion
            }
            compileOptions {
                sourceCompatibility javaVersion
                targetCompatibility javaVersion
            }
            tasks.withType(KotlinCompile).configureEach {
                kotlinOptions {
                    jvmTarget = javaVersion.toString()
                }
            }
//            println("Setting java version to ${javaVersion.toString()} which is $javaVersion")
//            println("Setting compileSdkVersion and targetSdkVersion to $androidApiVersion")
        }
    }

}

subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
