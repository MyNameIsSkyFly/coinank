<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- Theme applied to the Android Window while the process is starting when the OS's Dark Mode setting is off -->
    <style name="LaunchTheme" parent="@android:style/Theme.Light.NoTitleBar">
        <!-- Show a splash screen on the activity. Automatically removed when
             the Flutter engine draws its first frame -->
        <item name="android:windowBackground">@drawable/launch_background</item>
        <item name="android:windowSplashScreenBackground">@color/colorMain</item>
        <item name="android:windowSplashScreenAnimatedIcon">@drawable/ic_launch_logo_2</item>
    </style>
    <!-- Theme applied to the Android Window as soon as the process has started.
         This theme determines the color of the Android Window while your
         Flutter UI initializes, as well as behind your Flutter UI while its
         running.

         This Theme is only used starting with V2 of Flutter's Android embedding. -->
    <style name="NormalTheme" parent="@android:style/Theme.Light.NoTitleBar">
        <item name="android:windowBackground">?android:colorBackground</item>
    </style>

    <style name="LightTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorOnPrimary">@color/colorPrimary</item>
        <item name="colorAccent">@color/colorAccent</item>
        <item name="android:windowActionBar">false</item>
        <item name="android:windowNoTitle">true</item>
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="bg">@drawable/btn_back_night</item>
    </style>

    <!-- FirstActivity 用此主题-->

    <!-- Base application theme. -->

    <!-- 应用主题样式 -->
    <style name="AppTheme" parent="Theme.AppCompat.DayNight.NoActionBar">
        <!-- 窗口背景颜色 -->
        <item name="android:windowBackground">@color/colorPrimary</item>
        <!-- 应用的主要色调，ActionBar Toolbar 默认使用该颜色 -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <!-- 应用的主要暗色调，状态栏默认使用该颜色 -->
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <!-- 应用的强调色，CheckBox RadioButton Switch 等一般控件的选中效果默认采用该颜色 -->
        <item name="colorAccent">@color/colorAccent</item>
        <!-- 默认文本颜色，Button、TextView 的文字颜色 -->
        <item name="android:textColor">@color/blackgray</item>
        <!-- 默认字体大小，Button、TextView 的字体大小 -->
        <item name="android:textSize">14sp</item>
        <!-- 默认提示颜色，Button、TextView 的提示文字颜色 -->
        <item name="android:textColorHint">@color/blackgray</item>
        <!-- ActionMode 覆盖 Actionbar 不被顶下来 -->
        <item name="windowActionModeOverlay">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <!-- ActionMode 的颜色 -->
        <item name="actionModeBackground">@color/colorPrimary</item>
        <!-- 解决 Android 5.1 及以上版本 Button 英文字符串自动变大写的问题 -->
        <item name="android:textAllCaps">false</item>
        <!-- 解决 ImageView 不能自动等比拉伸图片的问题 -->
        <item name="android:adjustViewBounds">true</item>
        <!-- 默认隐藏输入法，开启这个选项后会导致输入对话框在关闭之后不能关闭软键盘 -->
        <!--<item name="android:windowSoftInputMode">stateHidden</item>-->
        <!-- 关闭 RecyclerView NestedScrollView ViewPager 水波纹效果 -->
        <item name="android:overScrollMode">never</item>
        <!-- 关闭 TextView 自带的文字间距 -->
        <!--        <item name="android:includeFontPadding">false</item>-->
    </style>

    <!-- 全屏主题样式 -->

    <!-- 闪屏页主题样式 -->


    <!-- 对话框默认主题 -->
    <style name="BaseDialogTheme" parent="Theme.AppCompat.DayNight.Dialog.Alert"><!-- @android:style/Theme.Dialog -->
        <!-- 无边框 -->
        <item name="android:windowFrame">@null</item>
        <!-- 浮在 Activity 之上 -->
        <item name="android:windowIsFloating">true</item>
        <!-- 半透明 -->
        <item name="android:windowIsTranslucent">true</item>
        <!-- 背景透明 -->
        <item name="android:windowBackground">@color/transparent_color</item>
        <!-- 遮盖层 -->
        <item name="android:backgroundDimEnabled">true</item>
        <!-- 无标题 -->
        <item name="android:windowNoTitle">true</item>
        <!-- 动画效果 -->
        <item name="android:windowEnterAnimation">@anim/window_scale_in</item>
        <item name="android:windowExitAnimation">@anim/window_scale_out</item>
        <!-- Base.Theme.AppCompat.Light.Dialog.Alert 特有的属性，用于指定默认宽度，这里需要禁用 -->
        <item name="android:windowMinWidthMajor">0dp</item>
        <item name="android:windowMinWidthMinor">0dp</item>
        <!-- 解决 ActionBar 占位导致 Dialog 无法全屏显示的问题 -->
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <!-- ActionMode 覆盖 Actionbar，不顶下来 -->
        <item name="windowActionModeOverlay">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <!-- 不感知敏感的切换 -->
        <!--<item name="android:configChanges">orientation|screenSize|keyboardHidden</item>-->
        <!-- 默认隐藏输入法 -->
        <!--<item name="android:windowSoftInputMode">stateHidden</item>-->
        <!-- Dialog 全屏显示 -->
        <!--<item name="android:windowFullscreen">true</item>-->
    </style>

    <!-- 缩放动画 -->
    <style name="ScaleAnimStyle" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/window_scale_in</item>
        <item name="android:windowExitAnimation">@anim/window_scale_out</item>
    </style>

    <!-- ios 动画 -->
    <style name="IOSAnimStyle" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/window_ios_in</item>
        <item name="android:windowExitAnimation">@anim/window_ios_out</item>
    </style>

    <!-- 顶部弹出动画 -->
    <style name="TopAnimStyle" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/window_top_in</item>
        <item name="android:windowExitAnimation">@anim/window_top_out</item>
    </style>

    <!-- 底部弹出动画 -->
    <style name="BottomAnimStyle" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/window_bottom_in</item>
        <item name="android:windowExitAnimation">@anim/window_bottom_out</item>
    </style>

    <!-- 左边弹出动画 -->
    <style name="LeftAnimStyle" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/window_left_in</item>
        <item name="android:windowExitAnimation">@anim/window_left_out</item>
    </style>

    <!-- 右边弹出动画 -->
    <style name="RightAnimStyle" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/window_right_in</item>
        <item name="android:windowExitAnimation">@anim/window_right_out</item>
    </style>

</resources>
